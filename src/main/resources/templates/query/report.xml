<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.report.dao.ReportDao">
	<resultMap type="report" id="reportMap">
		<id column="report_id" property="reportId"/>
		<result column="report_sort" property="reportSort"/>
		<result column="report_date" property="reportDate"/>
		<result column="report_detail" property="reportDetail"/>
		<result column="report_status" property="reportStatus"/>
		
		<result column="user_id" property="userId"/>
		<result column="fboard_id" property="fboardId"/>
		<result column="vfboard_id" property="vfboardId"/>
		<result column="afboard_id" property="afboardId"/>
		<result column="fcomment_id" property="fcommentId"/>
		<result column="vfcomment_id" property="vfcommentId"/>
		<result column="afcomment_id" property="afcommentId"/>
	</resultMap>

	<select id="reportList" parameterType="report" resultMap="reportMap">
		select distinct r.report_id, r.report_sort, to_char(r.report_date, 'YYYY-MM-DD') as report_date, r.report_status,
		    r.user_id, r.fboard_id, r.vfboard_id, r.afboard_id, r.fcomment_id, r.vfcomment_id, r.afcomment_id ,
		    case
		        when r.fboard_id is not null then f.fboard_title
		        when r.vfboard_id is not null then v.vfboard_title
		        when r.afboard_id is not null then a.afboard_title
		        when r.fcomment_id is not null then fc.fcomment_content
		        when r.vfcomment_id is not null then vc.vfcomment_content
		        when r.afcomment_id is not null then ac.afcomment_content
		    end as boardTitle,
		    case
		        when r.fboard_id is not null then to_char(f.fboard_date, 'YYYY-MM-DD')
		        when r.vfboard_id is not null then to_char(v.vfboard_date, 'YYYY-MM-DD')
		        when r.afboard_id is not null then to_char(a.afboard_date, 'YYYY-MM-DD')
		        when r.fcomment_id is not null then to_char(fc.fcomment_date, 'YYYY-MM-DD')
		        when r.vfcomment_id is not null then to_char(vc.vfcomment_date, 'YYYY-MM-DD')
		        when r.afcomment_id is not null then to_char(ac.afcomment_date, 'YYYY-MM-DD')
		    end as boardDate,
		    case
		        when r.fboard_id is not null then f.user_id
		        when r.vfboard_id is not null then v.user_id
		        when r.afboard_id is not null then a.user_id
		        when r.fcomment_id is not null then fc.user_id
		        when r.vfcomment_id is not null then vc.user_id
		        when r.afcomment_id is not null then ac.user_id
		    end as boardUser
		from report r, freeBoard f, volunteerFeedbackBoard v, adoptionFeedbackBoard a, fcomment fc, vfcomment vc, afcomment ac
		where (r.report_status = 1) and ((r.fboard_id = f.fboard_id) or (r.vfboard_id = v.vfboard_id) or (r.afboard_id = a.afboard_id) or (r.fcomment_id = fc.fcomment_id) or (r.vfcomment_id = vc.vfcomment_id) or (r.afcomment_id = ac.afcomment_id))
	</select>
	
	
	<select id="reportDetail" parameterType="report" resultMap="reportMap">
		select distinct r.report_id, r.report_sort, to_char(r.report_date, 'YYYY-MM-DD') as report_date, r.report_status, r.report_detail,
		    r.user_id, r.fboard_id, r.vfboard_id, r.afboard_id, r.fcomment_id, r.vfcomment_id, r.afcomment_id ,
		    case
		        when r.fboard_id is not null then f.fboard_id
		        when r.vfboard_id is not null then v.vfboard_id
		        when r.afboard_id is not null then a.afboard_id
		        when r.fcomment_id is not null then fc.fcomment_id
		        when r.vfcomment_id is not null then vc.vfcomment_id
		        when r.afcomment_id is not null then ac.afcomment_id
		    end as boardId,
		    case
		        when r.fboard_id is not null then f.fboard_title
		        when r.vfboard_id is not null then v.vfboard_title
		        when r.afboard_id is not null then a.afboard_title
		        when r.fcomment_id is not null then fc.fcomment_content
		        when r.vfcomment_id is not null then vc.vfcomment_content
		        when r.afcomment_id is not null then ac.afcomment_content
		    end as boardTitle,
		    case
		        when r.fboard_id is not null then to_char(f.fboard_date, 'YYYY-MM-DD')
		        when r.vfboard_id is not null then to_char(v.vfboard_date, 'YYYY-MM-DD')
		        when r.afboard_id is not null then to_char(a.afboard_date, 'YYYY-MM-DD')
		        when r.fcomment_id is not null then to_char(fc.fcomment_date, 'YYYY-MM-DD')
		        when r.vfcomment_id is not null then to_char(vc.vfcomment_date, 'YYYY-MM-DD')
		        when r.afcomment_id is not null then to_char(ac.afcomment_date, 'YYYY-MM-DD')
		    end as boardDate,
		    case
		        when r.fboard_id is not null then f.user_id
		        when r.vfboard_id is not null then v.user_id
		        when r.afboard_id is not null then a.user_id
		        when r.fcomment_id is not null then fc.user_id
		        when r.vfcomment_id is not null then vc.user_id
		        when r.afcomment_id is not null then ac.user_id
		    end as boardUser,
		    case
		        when r.fboard_id is not null then f.fboard_content
		        when r.vfboard_id is not null then v.vfboard_content
		        when r.afboard_id is not null then a.afboard_content
		        when r.fcomment_id is not null then fc.fcomment_content
		        when r.vfcomment_id is not null then vc.vfcomment_content
		        when r.afcomment_id is not null then ac.afcomment_content
		    end as boardContent
		from report r, freeBoard f, volunteerFeedbackBoard v, adoptionFeedbackBoard a, fcomment fc, vfcomment vc, afcomment ac
		where r.report_id = #{reportId} and ((r.fboard_id = f.fboard_id) or (r.vfboard_id = v.vfboard_id) or (r.afboard_id = a.afboard_id) or (r.fcomment_id = fc.fcomment_id) or (r.vfcomment_id = vc.vfcomment_id) or (r.afcomment_id = ac.afcomment_id))
	
	</select>


	<insert id="reportInsertFB" parameterType="report">
		insert into report(report_id, report_sort, report_date, report_detail, report_status, fboard_id, user_id)
		values(#{reportId}, #{reportSort}, sysdate, #{reportDetail}, 1, #{fboardId}, #{userId})
	</insert>

	<insert id="reportInsertVB" parameterType="report">
		insert into report(report_id, report_sort, report_date, report_detail, report_status, vfboard_id, user_id)
		values(#{reportId}, #{reportSort}, sysdate, #{reportDetail}, 1, #{vfboardId}, #{userId})
	</insert>

	<insert id="reportInsertAB" parameterType="report">
		insert into report(report_id, report_sort, report_date, report_detail, report_status, afboard_id, user_id)
		values(#{reportId}, #{reportSort}, sysdate, #{reportDetail}, 1, #{afboardId}, #{userId})
	</insert>

	<insert id="reportInsertFC" parameterType="report">
		insert into report(report_id, report_sort, report_date, report_detail, report_status, fcomment_id, user_id)
		values(#{reportId}, #{reportSort}, sysdate, #{reportDetail}, 1, #{fcommentId}, #{userId})
	</insert>

	<insert id="reportInsertVC" parameterType="report">
		insert into report(report_id, report_sort, report_date, report_detail, report_status, vfcomment_id, user_id)
		values(#{reportId}, #{reportSort}, sysdate, #{reportDetail}, 1, #{vfcommentId}, #{userId})
	</insert>

	<insert id="reportInsertAC" parameterType="report">
		insert into report(report_id, report_sort, report_date, report_detail, report_status, afcomment_id, user_id)
		values(#{reportId}, #{reportSort}, sysdate, #{reportDetail}, 1, #{afcommentId}, #{userId})
	</insert>


	<update id="reportUpdate" parameterType="report">
		update report
		set report_status = 2
		where report_id = #{reportId}
	</update>


	<update id="reportModify" parameterType="report">
		update report
		set 
			report_sort = #{reportSort},
			report_date = sysdate,
			report_detail = #{reportDetail}
		where report_id = #{reportId}
	</update>

	
	<delete id="reportDelete" parameterType="report">
		delete from report
		where report_id = #{reportId}
	</delete>
	
	

</mapper>
