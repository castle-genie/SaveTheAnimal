<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.user.dao.UserDao">
	<resultMap type="user" id="userMap">
		<id column="user_id" property="userId"/>
		<result column="user_pwd" property="userPasswd"/>
		<result column="user_name" property="userName"/>
		<result column="user_phone" property="userPhone"/>
		<result column="user_email" property="userEmail"/>
		<result column="user_date" property="userDate"/>
		<result column="user_act" property="userAct"/>
		<result column="user_repcnt" property="userRepcnt"/>
		<result column="user_volcnt" property="userVolcnt"/>
		<result column="user_level" property="userLevel"/>
		<result column="user_adoptChk" property="userAdoptChk"/>
	</resultMap>

	<!-- 로그인 -->
	<select id="userLoginProcess" parameterType="user" resultMap="userMap">
		select user_id, user_name
		from users
		where user_id = #{userId} and user_pwd = #{userPasswd}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findId" parameterType="user" resultMap="userMap">
		select user_id
		from users
		where user_email = #{userEmail}
	</select>
	
	<!-- 회원아이디 여부 체크 -->
	<select id="findIdCheck" parameterType="user" resultType="int">
		select count(*) 
		from users
		where user_email = #{userEmail}
	</select>
	
	<!-- 회원 가입 -->
	<insert id="userJoin" parameterType="user">
		insert into users(user_id, user_pwd, user_name, user_phone, user_email)
		values(#{userId}, #{userPasswd}, #{userName}, #{userPhone}, #{userEmail})
	</insert>
	
	<!-- 회원아이디 중복 체크 -->
	<!-- <select id="idCheck" parameterType="user" resultType="int">
		select count(*) 
		from users
		where user_id = #{userId}
	</select> -->
	
	<!-- 중복 체크 : 아이디, 핸드폰번호, 이메일 -->
	<select id="checkDuplicate" parameterType="user" resultType="int">
	    select count(*) 
		from users
	    where
	    <choose>
	        <when test="checkType == 'user_id'">
	            user_id = #{userId}
	        </when>
	        <when test="checkType == 'user_email'">
	            user_email = #{userEmail}
	        </when>
	        <when test="checkType == 'user_phone'">
	            user_phone = #{userPhone}
	        </when>
	    </choose>
	</select>	

	<update id="userUpdate" parameterType="user">
		update users
		set user_name = #{userName}, user_phone = #{userPhone}, user_email = #{userEmail}
		<if test="userPasswd != ''">	
			, user_pwd = #{userPasswd}
		</if>	
		where user_id = #{userId}
	</update>
	
	<select id="userInfo" parameterType="user" resultMap="userMap">
		select 
		    user_id, user_pwd, user_name, user_phone, user_email, user_volcnt, user_level,
		    to_char(user_date, 'YYYY-MM-DD') as user_date, user_act, user_repcnt
		from users
		where user_id = #{userId}
	</select>
	
	<select id="pwdConfirm" parameterType="user" resultType="int">
		select nvl((
		            select 1 from users
		            where user_id = #{userId} and user_pwd = #{userPasswd}
		          ), 0) as state
		from dual
	</select>

</mapper>